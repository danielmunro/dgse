<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>acronym on Dan's Software Engineering Handbook</title><link>http://danssoftwareengineeringhandbook.com/tags/acronym/</link><description>Recent content in acronym on Dan's Software Engineering Handbook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Jun 2021 20:35:41 -0700</lastBuildDate><atom:link href="http://danssoftwareengineeringhandbook.com/tags/acronym/index.xml" rel="self" type="application/rss+xml"/><item><title>SOLID</title><link>http://danssoftwareengineeringhandbook.com/glossary/solid/</link><pubDate>Tue, 22 Jun 2021 20:35:41 -0700</pubDate><guid>http://danssoftwareengineeringhandbook.com/glossary/solid/</guid><description>Programming design principles. Acronym:
Single Responsibility Principle Open/Closed Principle Liskov Substitution Principle Interface Segregation Principle Dependency Inversion</description></item><item><title>IDE</title><link>http://danssoftwareengineeringhandbook.com/glossary/ide/</link><pubDate>Mon, 21 Jun 2021 08:07:57 -0700</pubDate><guid>http://danssoftwareengineeringhandbook.com/glossary/ide/</guid><description>Acronym: integrated development environment.
A software program, used by programmers. Includes a combination of tools such as a text editor and language compiler (hence &amp;ldquo;integrated&amp;rdquo;). Often highly extensible and customizable.
Examples of IDEs include:
JetBrains IDEs Microsoft Visual Studio Eclipse</description></item><item><title>CI/CD</title><link>http://danssoftwareengineeringhandbook.com/glossary/ci-cd/</link><pubDate>Mon, 21 Jun 2021 07:32:56 -0700</pubDate><guid>http://danssoftwareengineeringhandbook.com/glossary/ci-cd/</guid><description>Acronym. Continuous integration / continuous delivery.
Concept. Defines a developer workflow whereby code changes go through an automated process after check in.
The first step of the process is integration. Automated tests run, as well as any configured analysis tools.
The second step is delivery. In this case, delivery means automatic deployment of code changes to the next target environment once the integration step completes. Typically, there is more than one target environment, so this process can loop a few times as verification checks happen in each environment.</description></item><item><title>API</title><link>http://danssoftwareengineeringhandbook.com/glossary/api/</link><pubDate>Sun, 20 Jun 2021 21:32:12 -0700</pubDate><guid>http://danssoftwareengineeringhandbook.com/glossary/api/</guid><description> Acronym. Application programming interface.
Concept. Something that provides functionality, which can be programmed against.
A library, module, or service that can be integrated into code.</description></item></channel></rss>