<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testing on Dan's Software Engineering Handbook</title><link>http://danssoftwareengineeringhandbook.com/tags/testing/</link><description>Recent content in testing on Dan's Software Engineering Handbook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 22 Jun 2021 20:38:19 -0700</lastBuildDate><atom:link href="http://danssoftwareengineeringhandbook.com/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Unit Test</title><link>http://danssoftwareengineeringhandbook.com/glossary/unit-test/</link><pubDate>Tue, 22 Jun 2021 20:38:19 -0700</pubDate><guid>http://danssoftwareengineeringhandbook.com/glossary/unit-test/</guid><description>A test that exercises the smallest unit of publicly exposed code.
&amp;ldquo;Smallest unit of publicly exposed code&amp;rdquo; depends on a few factors. For a library, this could be a public method in the library. For a REST API, the unit in question is (or at least should be) a REST call.
Why Not Lower Level Testing? The reason why testing does not occur below this level (the &amp;ldquo;unit&amp;rdquo;), is because of subtle issues that cascade problems later on.</description></item><item><title>Integration Test</title><link>http://danssoftwareengineeringhandbook.com/glossary/integration-test/</link><pubDate>Tue, 22 Jun 2021 20:27:18 -0700</pubDate><guid>http://danssoftwareengineeringhandbook.com/glossary/integration-test/</guid><description>Test that encompasses more components than a unit test.
There is no hard definition for what makes a unit test versus an integration test. However, one of the primary goals of an integration test is to test how the different components or services interact with each other.</description></item></channel></rss>